# Review06-Thread


一、如何启动一个线程（为什么是调用start方法而不是run方法）
   启动一个线程必须调用方法来启动，也就是调用Thread类的start()方法、而不是调用run()方法的原因是：run()中包含的是线程的主体，
   也就是这个线程被启动后将要运行的代码，它和线程的启动没有任何关系。
 
二、Thread类中的start()方法和run()方法的区别
       start()方法用来启动一个线程，当调用start()方法时，系统才会开启一个线程，通过Thread类的start()方法来启动的线程处于就绪状态（可运行状态），
   此时并没有真正的运行，只有一旦得到CPU时间片，才会自动开始执行run()方法。
   
       run()方法只是线程里的一个函数(也称为线程体)，而不是多线程的。如果直接调用run()方法，其实就相当于是调用了一个普通函数而已。直接调用run()方法
   必须等待run()方法执行完后才能执行下面的代码，所以执行路径还是只有一条，这样就没有达到写线程的目的。所以在多线程执行时要使用start()方法去启动线程
   而不是run()方法。 把需要处理的代码放到run()方法中，start()方法启动线程将自动调用run()方法，这个由java的内存机制规定的。并且run()方法必须
   是public的访问权限，返回值为void。
 
